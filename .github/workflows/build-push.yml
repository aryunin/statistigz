name: build & push
on:
  push:
    branches:
      - dev
      - master
  workflow_dispatch:

jobs:
  server:
    runs-on: ubuntu-latest
    env:
      working-directory: ./server
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Build with Maven
        run: mvn -B clean package -DskipTests -Drevision=${{ vars.SERVER_DEV_REVISION }} -Pproduction
        working-directory: ${{ env.working-directory }}
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Meta main
        id: meta_main
        uses: docker/metadata-action@v5
        with:
          images: aryunin/marr-server-main
          
      - name: Build and push main
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.working-directory }}/main
          push: true
          tags: ${{ steps.meta_main.outputs.tags }}
          labels: ${{ steps.meta_main.outputs.labels }}
          
#      - name: Meta survey
#        id: meta_survey
#        uses: docker/metadata-action@v5
#        with:
#          images: aryunin/marr-server-survey
#          
#      - name: Build and push survey
#        uses: docker/build-push-action@v5
#        with:
#          context: ${{ env.working-directory }}/survey
#          push: true
#          tags: ${{ steps.meta_survey.outputs.tags }}
#          labels: ${{ steps.meta_survey.outputs.labels }} 
          
      - name: Meta rcm
        id: meta_rcm
        uses: docker/metadata-action@v5
        with:
          images: aryunin/marr-server-rcm
          
      - name: Build and push rcm
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.working-directory }}/region-recommendation
          push: true
          tags: ${{ steps.meta_rcm.outputs.tags }}
          labels: ${{ steps.meta_rcm.outputs.labels }}
          
      - name: Meta gateway 
        id: meta_gateway
        uses: docker/metadata-action@v5
        with:
          images: aryunin/marr-server-gateway
          
      - name: Build and push gateway
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.working-directory }}/gateway
          push: true
          tags: ${{ steps.meta_gateway.outputs.tags }}
          labels: ${{ steps.meta_gateway.outputs.labels }}     

      - name: Meta cp 
        id: meta_cp
        uses: docker/metadata-action@v5
        with:
          images: aryunin/marr-server-cp
          
      - name: Build and push cp
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.working-directory }}/cp
          push: true
          tags: ${{ steps.meta_cp.outputs.tags }}
          labels: ${{ steps.meta_cp.outputs.labels }} 
          
  classifier:
    runs-on: ubuntu-latest
    env:
      working-directory: ./classifier
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: aryunin/marr-classifier
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.working-directory }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}       
          
  excel-loader:
    runs-on: ubuntu-latest
    env:
      working-directory: ./excel-loader
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: aryunin/marr-excel-loader
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.working-directory }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
#  front:
#    runs-on: ubuntu-latest
#    env:
#      working-directory: ./web-frontend
#    steps:
#      - uses: actions/checkout@v4
#      
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#          
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@v5
#        with:
#          images: aryunin/marr-front
#          
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v5
#        with:
#          context: ${{ env.working-directory }}
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          build-args: |
#            REACT_APP_API_HOST=localhost
#            REACT_APP_API_PORT=8080
#            REACT_APP_API_PREFIX=api
          
  mobile:
    runs-on: ubuntu-latest
    env:
      working-directory: ./mobile-app
    steps: 
      - uses: actions/checkout@v4  
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: gradle
          
      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: '3.13.9'
          
      - name: Dependencies
        run: flutter pub get
        working-directory: ${{ env.working-directory }}
        
      - name: Analyze
        run: flutter analyze --no-fatal-infos --no-fatal-warnings
        working-directory: ${{ env.working-directory }}  
        
      - name: Build apk
        run: flutter build apk
        working-directory: ${{ env.working-directory }}
        
      - name: Get next version
        uses: reecetech/version-increment@2023.9.3
        id: version
        with:
          scheme: calver    
          
      - name: Rename apk
        run: mv ./build/app/outputs/apk/release/app-release.apk ./build/app/outputs/apk/release/app-${{ steps.version.outputs.version }}.apk
        working-directory: ${{ env.working-directory }}       
        
      - name: Upload artifacts   
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ steps.version.outputs.version }}
          retention-days: 30
          compression-level: 0
          path: ${{ env.working-directory }}/build/app/outputs/apk/release/app-${{ steps.version.outputs.version }}.apk          
