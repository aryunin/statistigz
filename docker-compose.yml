version: '3.8'

services:
  server-main:
    image: 'aryunin/marr-server-main:dev'
    container_name: server-main
    depends_on: 
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=statistigz
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - SERVICE_PORT=8080
      - SERVICE_PATH=/api
    ports: 
      - 8080:8080
    restart: always
    
  server-survey:
    image: 'aryunin/marr-server-survey:dev'
    container_name: server-survey
    depends_on: 
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=statistigz
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - SERVICE_PORT=8080
      - SERVICE_PATH=/api/survey
      - LOG_LEVEL=INFO
    ports: 
      - 8081:8080
    restart: always
    
  server-rcm:
    image: 'aryunin/marr-server-rcm:dev'
    container_name: server-rcm
    depends_on: 
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=statistigz
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - SERVICE_PORT=8080
      - SERVICE_PATH=/api/rcm
      - CLASSIFIER_HOST=classifier
      - CLASSIFIER_PORT=8080
      - CLASSIFIER_PATH=/
      - LOG_LEVEL=INFO
    ports: 
      - 8082:8080
    restart: always
    
  classifier:
    image: 'aryunin/marr-classifier:dev'
    container_name: classifier
    environment:
      - SERVICE_PORT=8080
      - SERVICE_PATH=/
    restart: always
    
  excel-loader:
    image: 'aryunin/marr-excel-loader:dev'
    container_name: excel-loader
    environment:
      - HOST=db
      - PORT=5432
      - DB_NAME=statistigz
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_URL=postgresql+psycopg2://postgres:postgres@db:5432/statistigz
      - PREV_SERVICE_HOST=server-main
      - PREV_SERVICE_PORT=8080

  db:
    image: 'postgres:16.0'
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=statistigz
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 120s
      retries: 5
      
  front:
    image: 'aryunin/marr-front:dev'
    container_name: front
    ports: 
      - 80:3000
    restart: always
      
volumes:
  pgdata:
    